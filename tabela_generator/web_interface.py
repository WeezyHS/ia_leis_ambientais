#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Interface web para o gerador de tabelas de leis ambientais
Usando Streamlit para uma interface mais amig√°vel
"""

import streamlit as st
import sys
import os
from pathlib import Path
import pandas as pd
import json

# Adicionar o diret√≥rio pai ao path
sys.path.append(str(Path(__file__).parent.parent))

from ia_tabela_service import IATabela

# Fun√ß√µes de valida√ß√£o
# Fun√ß√µes de valida√ß√£o
def validar_relevancia_descricao(descricao: str) -> bool:
    """Valida se a descri√ß√£o cont√©m termos ambientais relevantes"""
    if not descricao or not descricao.strip():
        return True  # Descri√ß√£o vazia √© permitida
    
    palavras_ambientais = [
        "ambiental", "licenciamento", "meio ambiente", "sustentabilidade",
        "polui√ß√£o", "conserva√ß√£o", "preserva√ß√£o", "impacto", "gest√£o",
        "recursos naturais", "biodiversidade", "ecologia", "sustent√°vel",
        "regulariza√ß√£o", "estudo", "eia", "rima", "legisla√ß√£o", "norma"
    ]
    
    palavras_atividades = [
        "agricultura", "pecu√°ria", "ind√∫stria", "minera√ß√£o", "saneamento",
        "energia", "transporte", "constru√ß√£o", "turismo", "com√©rcio",
        "frigor√≠fico", "usina", "loteamento", "empreendimento", "projeto",
        "atividade", "obra", "servi√ßos", "produ√ß√£o", "processamento"
    ]
    
    descricao_lower = descricao.lower()
    return any(palavra in descricao_lower for palavra in palavras_ambientais + palavras_atividades)

def validar_anti_spam(descricao: str) -> bool:
    """Detecta padr√µes de spam ou texto aleat√≥rio"""
    if not descricao or not descricao.strip():
        return True  # Descri√ß√£o vazia √© permitida
    
    import re
    
    # Detectar repeti√ß√µes excessivas de palavras
    palavras = descricao.lower().split()
    if len(palavras) > 2 and len(set(palavras)) < len(palavras) * 0.5:
        return False  # Muitas repeti√ß√µes
    
    # Detectar sequ√™ncias muito longas de caracteres aleat√≥rios
    if re.search(r'[a-z]{15,}', descricao.lower()):
        return False  # Sequ√™ncias muito longas sem espa√ßos
    
    # Detectar padr√µes de teclado aleat√≥rio
    padroes_spam = [r'qwerty', r'asdfgh', r'zxcvbn', r'123456', r'abcdef']
    for padrao in padroes_spam:
        if re.search(padrao, descricao.lower()):
            return False
    
    return True

def validar_entrada_usuario(descricao: str) -> bool:
    """Valida√ß√£o completa da entrada do usu√°rio"""
    if not descricao or not descricao.strip():
        return True  # Descri√ß√£o vazia √© permitida
    
    # Aplicar todas as valida√ß√µes
    validacoes = [
        validar_relevancia_descricao(descricao),
        validar_anti_spam(descricao)
    ]
    
    return all(validacoes)

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="IA Leis Ambientais",
    page_icon="üåø",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': None,
        'Report a bug': None,
        'About': None
    }
)

# Inicializar estado do tema
if 'dark_mode' not in st.session_state:
    st.session_state.dark_mode = False

def get_theme_css():
    """Retorna CSS baseado no tema atual"""
    if st.session_state.dark_mode:
        return """
        <style>
            /* Importar fontes modernas */
            @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
            @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css');
            
            /* MODO ESCURO */
            .stApp {
                background-color: #0f172a !important;
                color: #e2e8f0;
            }
            
            /* Remover barra branca do topo */
            .css-18e3th9, .css-1d391kg, .css-k1vhr4, .css-1y4p8pa, 
            header[data-testid="stHeader"], .stHeader, [data-testid="stHeader"] {
                background-color: #0f172a !important;
                color: #e2e8f0 !important;
            }
            
            /* Ocultar menu de configura√ß√µes do Streamlit */
            button[title="View fullscreen"], 
            button[aria-label="View fullscreen"],
            [data-testid="stToolbar"],
            .css-14xtw13.e8zbici0,
            .css-vk3wp9,
            .css-1kyxreq > .css-fblp2m,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc > .css-1outpf7,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc > .css-1outpf7 > .css-1wivap2,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc > .css-1outpf7 > .css-1wivap2 > .css-1lcbmhc {
                display: none !important;
                visibility: hidden !important;
            }
            
            /* Sidebar - Modo escuro */
            [data-testid="stSidebar"], [data-testid="stSidebar"] > div,
            [data-testid="stSidebar"] > div, [data-testid="stSidebar"] > div > div,
            .css-1544g2n, .css-1d391kg > div, .css-1d391kg > div > div {
                background-color: #0f172a !important;
                color: #e2e8f0 !important;
            }
            
            /* Corrigir bordas e separadores pretos */
            .css-1kyxreq::before, .css-12oz5g7::before, .css-1v0mbdj::before,
            .css-16huue1::before, .css-1inwz65::before, .css-1cpxqw2::before,
            .css-1vencpc::before, .css-1y4p8pa::before, .css-1lcbmhc::before,
            .css-17eq0hr::before, .css-1aumxhk::before, .css-1d391kg::before {
                background-color: #1e293b !important;
                border-color: #334155 !important;
            }
            
            /* Corrigir elementos de interface pretos */
            .css-1kyxreq *, .css-12oz5g7 *, .css-1v0mbdj *, .css-16huue1 *,
            .css-1inwz65 *, .css-1cpxqw2 *, .css-1vencpc *, .css-1y4p8pa *,
            .css-1lcbmhc *, .css-17eq0hr *, .css-1aumxhk *, .css-1d391kg *,
            [data-testid="stSidebar"] *, [data-testid="stSidebar"] > div *,
            .css-1544g2n *, .css-1d391kg > div *, .css-1d391kg > div > div * {
                color: #e2e8f0 !important;
            }
            
            .main .block-container {
                padding-top: 2rem;
                padding-bottom: 2rem;
                max-width: 1200px;
                background-color: #0f172a;
            }
            
            /* Fonte global */
            html, body, [class*="css"] {
                font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
                color: #e2e8f0;
            }
            
            /* Header principal - Modo escuro */
            .main-header {
                background: linear-gradient(135deg, #1e293b 0%, #334155 50%, #475569 100%);
                padding: 2.5rem 2rem;
                border-radius: 20px;
                color: #f1f5f9;
                text-align: center;
                margin-bottom: 3rem;
                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
                border: 1px solid rgba(255, 255, 255, 0.1);
                position: relative;
                overflow: hidden;
            }
            
            .main-header::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.05) 50%, transparent 70%);
                animation: shimmer 3s infinite;
            }
            
            @keyframes shimmer {
                0% { transform: translateX(-100%); }
                100% { transform: translateX(100%); }
            }
            
            .main-header h1 {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 0.5rem;
                text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
                position: relative;
                z-index: 1;
                color: #f1f5f9;
            }
            
            .main-header h3 {
                font-size: 1.25rem;
                font-weight: 400;
                opacity: 0.9;
                position: relative;
                z-index: 1;
                color: #cbd5e1;
            }
            
            /* Sidebar escura - Todos os seletores */
            .css-1d391kg, .css-1lcbmhc, .css-17eq0hr, .css-1y4p8pa, .css-1aumxhk, 
            section[data-testid="stSidebar"], .stSidebar, [data-testid="stSidebar"] {
                background-color: #1e293b !important;
                color: #e2e8f0 !important;
            }
            
            /* Texto da sidebar */
            .css-1d391kg *, .css-1lcbmhc *, .css-17eq0hr *, .css-1y4p8pa *, .css-1aumxhk *,
            section[data-testid="stSidebar"] *, .stSidebar *, [data-testid="stSidebar"] *,
            .css-1d391kg .stMarkdown, .css-1d391kg .stText, .css-1d391kg p, 
            .css-1d391kg h1, .css-1d391kg h2, .css-1d391kg h3, .css-1d391kg h4, 
            .css-1d391kg h5, .css-1d391kg h6, .css-1d391kg span, .css-1d391kg div {
                color: #e2e8f0 !important;
            }
            
            /* M√©tricas na sidebar */
            .css-1d391kg .metric-container, .css-1d391kg [data-testid="metric-container"] {
                background: linear-gradient(135deg, #334155 0%, #475569 100%) !important;
                color: #e2e8f0 !important;
                border: 1px solid #64748b !important;
            }
            
            /* Bot√µes na sidebar */
            .css-1d391kg .stButton > button {
                background: linear-gradient(135deg, #475569 0%, #334155 100%) !important;
                color: #f1f5f9 !important;
                border: 1px solid #64748b !important;
            }
            
            /* Cards e containers - Modo escuro */
            .success-box {
                background: linear-gradient(135deg, #064e3b 0%, #065f46 100%);
                border: 1px solid #059669;
                border-radius: 12px;
                padding: 1.5rem;
                margin: 1.5rem 0;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
            }
            
            .info-box {
                background: linear-gradient(135deg, #1e3a8a 0%, #1d4ed8 100%);
                border: 1px solid #3b82f6;
                border-radius: 12px;
                padding: 1.5rem;
                margin: 1.5rem 0;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
            }
            
            /* Bot√µes - Modo escuro */
            .stButton > button {
                background: linear-gradient(135deg, #475569 0%, #334155 100%);
                color: #f1f5f9;
                border: 1px solid #64748b;
                border-radius: 12px;
                padding: 0.75rem 1.5rem;
                font-weight: 500;
                font-size: 0.95rem;
                transition: all 0.3s ease;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            }
            
            .stButton > button:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
                background: linear-gradient(135deg, #64748b 0%, #475569 100%);
                border-color: #94a3b8;
            }
            
            /* Inputs - Modo escuro - Corre√ß√£o ULTRA espec√≠fica */
            /* TextArea - Todos os seletores poss√≠veis */
            .stTextArea textarea,
            .stTextArea > div > div > textarea,
            textarea[data-testid="stTextArea"],
            [data-testid="stTextArea"] textarea,
            [data-testid="stTextArea"] > div > div > textarea,
            div[data-testid="stTextArea"] textarea,
            div[data-testid="stTextArea"] > div > div > textarea,
            .css-1cpxqw2 textarea,
            .css-1d391kg textarea,
            .css-16huue1 textarea,
            .css-1v0mbdj textarea,
            .css-12oz5g7 textarea,
            .css-1kyxreq textarea {
                background-color: #1e293b !important;
                background: #1e293b !important;
                color: #e2e8f0 !important;
                border: 2px solid #475569 !important;
                border-radius: 12px !important;
                transition: all 0.3s ease !important;
                font-size: 14px !important;
                line-height: 1.5 !important;
                padding: 12px !important;
                font-family: 'Inter', sans-serif !important;
                -webkit-text-fill-color: #e2e8f0 !important;
                opacity: 1 !important;
            }
            
            /* Focus states */
            .stTextArea textarea:focus,
            .stTextArea > div > div > textarea:focus,
            textarea[data-testid="stTextArea"]:focus,
            [data-testid="stTextArea"] textarea:focus,
            [data-testid="stTextArea"] > div > div > textarea:focus,
            div[data-testid="stTextArea"] textarea:focus,
            div[data-testid="stTextArea"] > div > div > textarea:focus,
            .css-1cpxqw2 textarea:focus,
            .css-1d391kg textarea:focus,
            .css-16huue1 textarea:focus,
            .css-1v0mbdj textarea:focus,
            .css-12oz5g7 textarea:focus,
            .css-1kyxreq textarea:focus {
                border-color: #64748b !important;
                box-shadow: 0 0 0 3px rgba(100, 116, 139, 0.1) !important;
                background-color: #1e293b !important;
                background: #1e293b !important;
                color: #e2e8f0 !important;
                -webkit-text-fill-color: #e2e8f0 !important;
                outline: none !important;
            }
            
            /* Placeholder text */
            .stTextArea textarea::placeholder,
            textarea[data-testid="stTextArea"]::placeholder {
                color: #94a3b8 !important;
                opacity: 0.7 !important;
            }
            
            /* Containers das caixas de texto - Modo escuro */
            .stTextArea,
            .stTextArea > div,
            .stTextArea > div > div,
            [data-testid="stTextArea"],
            [data-testid="stTextArea"] > div,
            [data-testid="stTextArea"] > div > div,
            div[data-testid="stTextArea"],
            div[data-testid="stTextArea"] > div,
            div[data-testid="stTextArea"] > div > div {
                background-color: transparent !important;
                background: transparent !important;
            }
            
            .stSelectbox > div > div > select,
            .stSelectbox select,
            select[data-testid="stSelectbox"],
            [data-testid="stSelectbox"] > div > div > select,
            [data-testid="stSelectbox"] select {
                background-color: #1e293b !important;
                color: #e2e8f0 !important;
                border: 2px solid #475569 !important;
                border-radius: 12px !important;
            }
            

            
            /* Checkbox - Modo escuro */
            .stCheckbox > label {
                background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
                color: #e2e8f0;
                border: 2px solid #475569;
            }
            
            .stCheckbox > label:hover {
                border-color: #64748b;
                background: linear-gradient(135deg, #334155 0%, #475569 100%);
            }
            
            /* Corrigir fundo interno da checkbox no modo escuro */
            body.dark-mode div[data-testid="stCheckbox"] input[type="checkbox"] {
                accent-color: #0ea5e9 !important; /* azul claro */
                background-color: #1e293b !important;
                border: 2px solid #475569 !important;
            }
            
            /* M√©tricas - Modo escuro */
            .metric-container {
                background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
                border: 1px solid #475569;
                color: #e2e8f0;
            }
            
            /* DataFrames - Modo escuro */
            .stDataFrame {
                background-color: #1e293b;
                border: 1px solid #475569;
            }
            
            /* Texto das c√©lulas da tabela - Modo escuro */
            .stDataFrame table, .stDataFrame tbody, .stDataFrame thead, .stDataFrame tr, .stDataFrame td, .stDataFrame th {
                color: #e2e8f0 !important;
            }
            
            [data-testid="stDataFrame"] table, [data-testid="stDataFrame"] tbody, [data-testid="stDataFrame"] thead,
            [data-testid="stDataFrame"] tr, [data-testid="stDataFrame"] td, [data-testid="stDataFrame"] th,
            [data-testid="stDataFrame"] div, [data-testid="stDataFrame"] span {
                color: #e2e8f0 !important;
            }
            
            /* Texto geral */
            .stMarkdown, .stText, p, h1, h2, h3, h4, h5, h6 {
                color: #e2e8f0;
            }
            
            /* √çcones */
            .icon, .icon-header, .icon-sidebar {
                color: #94a3b8;
            }
        </style>
        """
    else:
        return """
        <style>
            /* Importar fontes modernas */
            @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
            @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css');
            
            /* MODO CLARO */
            .stApp {
                background-color: #ffffff !important;
                color: #1f2937;
            }
            
            /* Remover barra branca do topo - Modo claro */
            .css-18e3th9, .css-1d391kg, .css-k1vhr4, .css-1y4p8pa, 
            header[data-testid="stHeader"], .stHeader, [data-testid="stHeader"] {
                background-color: #ffffff !important;
                color: #1f2937 !important;
            }
            
            /* Ocultar menu de configura√ß√µes do Streamlit */
            button[title="View fullscreen"], 
            button[aria-label="View fullscreen"],
            [data-testid="stToolbar"],
            .css-14xtw13.e8zbici0,
            .css-vk3wp9,
            .css-1kyxreq > .css-fblp2m,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc > .css-1outpf7,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc > .css-1outpf7 > .css-1wivap2,
            .css-1kyxreq > .css-fblp2m > .css-1wivap2 > .css-1lcbmhc > .css-1outpf7 > .css-1wivap2 > .css-1lcbmhc {
                display: none !important;
                visibility: hidden !important;
            }
            
            /* Sidebar - Modo claro */
            [data-testid="stSidebar"], [data-testid="stSidebar"] > div,
            [data-testid="stSidebar"] > div, [data-testid="stSidebar"] > div > div,
            .css-1544g2n, .css-1d391kg > div, .css-1d391kg > div > div {
                background-color: #ffffff !important;
                color: #1f2937 !important;
            }
            
            /* Corrigir bordas e separadores pretos - Modo claro */
            .css-1kyxreq::before, .css-12oz5g7::before, .css-1v0mbdj::before,
            .css-16huue1::before, .css-1inwz65::before, .css-1cpxqw2::before,
            .css-1vencpc::before, .css-1y4p8pa::before, .css-1lcbmhc::before,
            .css-17eq0hr::before, .css-1aumxhk::before, .css-1d391kg::before {
                background-color: #f1f5f9 !important;
                border-color: #e2e8f0 !important;
            }
            
            /* Corrigir elementos de interface pretos - Modo claro */
            .css-1kyxreq *, .css-12oz5g7 *, .css-1v0mbdj *, .css-16huue1 *,
            .css-1inwz65 *, .css-1cpxqw2 *, .css-1vencpc *, .css-1y4p8pa *,
            .css-1lcbmhc *, .css-17eq0hr *, .css-1aumxhk *, .css-1d391kg *,
            [data-testid="stSidebar"] *, [data-testid="stSidebar"] > div *,
            .css-1544g2n *, .css-1d391kg > div *, .css-1d391kg > div > div * {
                color: #1f2937 !important;
            }
            
            .main .block-container {
                padding-top: 2rem;
                padding-bottom: 2rem;
                max-width: 1200px;
            }
            
            /* Fonte global */
            html, body, [class*="css"] {
                font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            }
            
            /* Header principal - Design moderno */
            .main-header {
                background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 50%, #06b6d4 100%);
                padding: 2.5rem 2rem;
                border-radius: 20px;
                color: white;
                text-align: center;
                margin-bottom: 3rem;
                box-shadow: 0 20px 40px rgba(59, 130, 246, 0.15);
                border: 1px solid rgba(255, 255, 255, 0.1);
                position: relative;
                overflow: hidden;
            }
            
            .main-header::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
                animation: shimmer 3s infinite;
            }
            
            @keyframes shimmer {
                0% { transform: translateX(-100%); }
                100% { transform: translateX(100%); }
            }
            
            .main-header h1 {
                font-size: 2.5rem;
                font-weight: 700;
                margin-bottom: 0.5rem;
                text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                position: relative;
                z-index: 1;
            }
            
            .main-header h3 {
                font-size: 1.25rem;
                font-weight: 400;
                opacity: 0.9;
                position: relative;
                z-index: 1;
            }
            
            /* Cards e containers */
            .success-box {
                background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
                border: 1px solid #a7f3d0;
                border-radius: 12px;
                padding: 1.5rem;
                margin: 1.5rem 0;
                box-shadow: 0 4px 6px rgba(16, 185, 129, 0.05);
            }
            
            .info-box {
                background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%);
                border: 1px solid #93c5fd;
                border-radius: 12px;
                padding: 1.5rem;
                margin: 1.5rem 0;
                box-shadow: 0 4px 6px rgba(59, 130, 246, 0.05);
            }
            
            /* Bot√µes modernos */
            .stButton > button {
                background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
                color: white;
                border: none;
                border-radius: 12px;
                padding: 0.75rem 1.5rem;
                font-weight: 500;
                font-size: 0.95rem;
                transition: all 0.3s ease;
                box-shadow: 0 4px 12px rgba(59, 130, 246, 0.2);
            }
            
            .stButton > button:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(59, 130, 246, 0.3);
                background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
            }
            
            .stButton > button:active {
                transform: translateY(0);
            }
            
            /* Inputs modernos - Corre√ß√£o ULTRA espec√≠fica */
            /* TextArea - Todos os seletores poss√≠veis - Modo claro */
            .stTextArea textarea,
            .stTextArea > div > div > textarea,
            textarea[data-testid="stTextArea"],
            [data-testid="stTextArea"] textarea,
            [data-testid="stTextArea"] > div > div > textarea,
            div[data-testid="stTextArea"] textarea,
            div[data-testid="stTextArea"] > div > div > textarea,
            .css-1cpxqw2 textarea,
            .css-1d391kg textarea,
            .css-16huue1 textarea,
            .css-1v0mbdj textarea,
            .css-12oz5g7 textarea,
            .css-1kyxreq textarea {
                background-color: #ffffff !important;
                background: #ffffff !important;
                color: #1f2937 !important;
                border: 2px solid #e2e8f0 !important;
                border-radius: 12px !important;
                transition: all 0.3s ease !important;
                font-family: 'Inter', sans-serif !important;
                font-size: 14px !important;
                line-height: 1.5 !important;
                padding: 12px !important;
                -webkit-text-fill-color: #1f2937 !important;
                opacity: 1 !important;
            }
            
            /* Focus states - Modo claro */
            .stTextArea textarea:focus,
            .stTextArea > div > div > textarea:focus,
            textarea[data-testid="stTextArea"]:focus,
            [data-testid="stTextArea"] textarea:focus,
            [data-testid="stTextArea"] > div > div > textarea:focus,
            div[data-testid="stTextArea"] textarea:focus,
            div[data-testid="stTextArea"] > div > div > textarea:focus,
            .css-1cpxqw2 textarea:focus,
            .css-1d391kg textarea:focus,
            .css-16huue1 textarea:focus,
            .css-1v0mbdj textarea:focus,
            .css-12oz5g7 textarea:focus,
            .css-1kyxreq textarea:focus {
                border-color: #3b82f6 !important;
                box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1) !important;
                background-color: #ffffff !important;
                background: #ffffff !important;
                color: #1f2937 !important;
                -webkit-text-fill-color: #1f2937 !important;
                outline: none !important;
            }
            
            /* Placeholder text - Modo claro */
            .stTextArea textarea::placeholder,
            textarea[data-testid="stTextArea"]::placeholder {
                color: #6b7280 !important;
                opacity: 0.7 !important;
            }
            
            /* Containers das caixas de texto - Modo claro */
            .stTextArea,
            .stTextArea > div,
            .stTextArea > div > div,
            [data-testid="stTextArea"],
            [data-testid="stTextArea"] > div,
            [data-testid="stTextArea"] > div > div,
            div[data-testid="stTextArea"],
            div[data-testid="stTextArea"] > div,
            div[data-testid="stTextArea"] > div > div {
                background-color: transparent !important;
                background: transparent !important;
            }
            
            /* ===== CORRE√á√ïES ESPEC√çFICAS PARA MODO CLARO ===== */
            
            /* 1. Corrigir cor dos labels e textos gerais */
            .stRadio label, .stRadio span, label, span, .css-1cpxqw2 label, .css-1cpxqw2 span {
                color: #1f2937 !important;
            }
            
            /* 2. Corre√ß√£o para selectbox com classes padr√£o do Streamlit */
            .css-1cpxqw2 select,
            .css-16huue1 select,
            .css-1v0mbdj select,
            .css-12oz5g7 select {
                background-color: #ffffff !important;
                color: #1f2937 !important;
                border: 2px solid #e2e8f0 !important;
                border-radius: 12px !important;
            }
            
            /* 3. Garantir que toda tipografia no modo claro seja vis√≠vel */
            html, body, [class*="css"], label, span, div, p, h1, h2, h3, h4, h5, h6 {
                color: #1f2937 !important;
            }
            
            /* 4. FOR√áA M√ÅXIMA - Checkboxes BRANCAS no modo claro */
            html body .stApp .stCheckbox > label, 
            html body .stApp .stCheckbox > label > div, 
            html body .stApp .stCheckbox > label > div > div,
            html body .stApp .stCheckbox > label span, 
            html body .stApp .stCheckbox label, 
            html body .stApp .stCheckbox span,
            html body .stApp [data-testid="stCheckbox"] label, 
            html body .stApp [data-testid="stCheckbox"] span,
            html body .stApp [data-testid="stCheckbox"] > label, 
            html body .stApp [data-testid="stCheckbox"] > label > div,
            html body .stApp div[data-testid="stCheckbox"] > label,
            html body .stApp div[data-testid="stCheckbox"] > label > div {
                color: #1f2937 !important;
                background-color: #ffffff !important;
                background: #ffffff !important;
                background-image: none !important;
                border: 2px solid #e2e8f0 !important;
            }
            
            /* Corrigir fundo interno da checkbox no modo claro */
            div[data-testid="stCheckbox"] input[type="checkbox"] {
                accent-color: #3b82f6 !important; /* cor azul padr√£o, pode mudar */
                background-color: #ffffff !important;
                border: 2px solid #e2e8f0 !important;
            }
            
            /* 5. FOR√áA TOTAL - Sobrescrever QUALQUER gradiente escuro */
             html body .stApp .stCheckbox > label[style*="background"],
             html body .stApp .stCheckbox > label[style*="linear-gradient"] {
                 background: #ffffff !important;
                 background-color: #ffffff !important;
                 background-image: none !important;
             }
            
            /* Selectbox - Modo claro */
            .stSelectbox > div > div > select,
            .stSelectbox select,
            select[data-testid="stSelectbox"],
            [data-testid="stSelectbox"] > div > div > select,
            [data-testid="stSelectbox"] select {
                background-color: #ffffff !important;
                color: #1f2937 !important;
                border: 2px solid #e2e8f0 !important;
                border-radius: 12px !important;
                transition: all 0.3s ease !important;
            }
            
            .stSelectbox > div > div > select:focus,
            .stSelectbox select:focus,
            select[data-testid="stSelectbox"]:focus,
            [data-testid="stSelectbox"] > div > div > select:focus,
            [data-testid="stSelectbox"] select:focus {
                border-color: #3b82f6 !important;
                box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1) !important;
                background-color: #ffffff !important;
                color: #1f2937 !important;
            }
            

            
            /* Checkbox moderno - Modo claro */
            .stCheckbox > label {
                background: #ffffff !important;
                color: #1f2937 !important;
                padding: 1rem !important;
                border-radius: 12px !important;
                border: 2px solid #e2e8f0 !important;
                transition: all 0.3s ease !important;
                cursor: pointer !important;
            }
            
            .stCheckbox > label:hover {
                border-color: #3b82f6 !important;
                background: #f8fafc !important;
                color: #1f2937 !important;
            }
            
            /* Slider moderno */
            .stSlider > div > div > div > div {
                background: linear-gradient(90deg, #3b82f6, #06b6d4);
            }
            
            /* M√©tricas modernas */
            .metric-container {
                background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
                padding: 1.5rem;
                border-radius: 16px;
                border: 1px solid #e2e8f0;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.02);
                transition: all 0.3s ease;
            }
            
            .metric-container:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
            }
            
            /* DataFrames modernos */
            .stDataFrame {
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
                border: 1px solid #e2e8f0;
            }
            
            /* Texto das c√©lulas da tabela - Modo claro */
            .stDataFrame table, .stDataFrame tbody, .stDataFrame thead, .stDataFrame tr, .stDataFrame td, .stDataFrame th {
                color: #1f2937 !important;
            }
            
            [data-testid="stDataFrame"] table, [data-testid="stDataFrame"] tbody, [data-testid="stDataFrame"] thead,
            [data-testid="stDataFrame"] tr, [data-testid="stDataFrame"] td, [data-testid="stDataFrame"] th,
            [data-testid="stDataFrame"] div, [data-testid="stDataFrame"] span {
                color: #1f2937 !important;
            }
    
    /* Headers de se√ß√£o */
    .stMarkdown h1, .stMarkdown h2, .stMarkdown h3 {
        color: #1e293b;
        font-weight: 600;
    }
    
    /* Spinner customizado */
    .stSpinner > div {
        border-top-color: #3b82f6 !important;
    }
    
    /* Alertas modernos */
    .stAlert {
        border-radius: 12px;
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }
    
    /* Download buttons */
    .stDownloadButton > button {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        border: none;
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);
    }
    
    .stDownloadButton > button:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
        background: linear-gradient(135deg, #059669 0%, #047857 100%);
    }
    
    /* Anima√ß√µes suaves */
    * {
        transition: all 0.3s ease;
    }
    
    /* Responsividade */
    @media (max-width: 768px) {
        .main-header h1 {
            font-size: 2rem;
        }
        
        .main-header h3 {
            font-size: 1.1rem;
        }
        
        .main-header {
            padding: 2rem 1.5rem;
        }
    }
    
    /* Estilos para √≠cones profissionais */
    .icon {
        margin-right: 8px;
        color: #1f4e79;
        font-size: 1.1em;
    }
    
    .icon-header {
        margin-right: 12px;
        color: #ffffff;
        font-size: 1.3em;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }
    
    .icon-sidebar {
        margin-right: 8px;
        color: #2c5aa0;
        font-size: 1em;
    }
    
    .icon-button {
        margin-right: 6px;
        font-size: 0.9em;
    }
    
            .icon-metric {
                margin-right: 6px;
                color: #1f4e79;
                font-size: 1em;
            }
        </style>
        

        """

# Aplicar CSS baseado no tema
st.markdown(get_theme_css(), unsafe_allow_html=True)

def inicializar_servico():
    """Inicializa o servi√ßo de IA com cache"""
    if 'ia_tabela_service' not in st.session_state:
        try:
            st.session_state.ia_tabela_service = IATabela()
            st.session_state.servico_inicializado = True
        except Exception as e:
            st.error(f"Erro ao inicializar servi√ßo: {e}")
            st.session_state.servico_inicializado = False
    
    return st.session_state.get('servico_inicializado', False)

def main():
    """Fun√ß√£o principal da interface web"""
    
    # Header principal
    st.markdown("""
    <div class="main-header">
        <h1><i class="fas fa-brain icon-header"></i>Pl√™iade Ambiental - IA Geradora de Tabelas</h1>
        <h3>Sistema Inteligente de Organiza√ß√£o de Leis Ambientais</h3>
    </div>
    """, unsafe_allow_html=True)
    
    # ‚ö†Ô∏è Destaque das premissas obrigat√≥rias
    st.info("ü§ñ **IA DIRECIONADA**: Este sistema utiliza intelig√™ncia artificial para organizar e estruturar a legisla√ß√£o ambiental de forma inteligente e contextualizada.")
    
    # Inicializar servi√ßo de IA
    if not inicializar_servico():
        st.error("N√£o foi poss√≠vel inicializar o servi√ßo de IA.")
        return
    
    # Mostrar dados dispon√≠veis (fora da sidebar para evitar erros)
    # Todos os dados agora v√™m do Pinecone
    dados_pinecone = st.session_state.ia_tabela_service.todas_fontes_data
    total_leis_estaduais = len([d for d in dados_pinecone if d.get('jurisdicao', '').startswith('Estadual')])
    total_leis_federais = len([d for d in dados_pinecone if d.get('jurisdicao') == 'Federal'])
    total_leis_municipais = len([d for d in dados_pinecone if d.get('jurisdicao', '').startswith('Municipal')])
    total_todas_fontes = len(dados_pinecone)
    
    # Sidebar com informa√ß√µes
    with st.sidebar:
        # Toggle do modo escuro/claro
        st.markdown("### <i class='fas fa-palette icon-sidebar'></i>Tema", unsafe_allow_html=True)
        
        col_theme1, col_theme2 = st.columns(2)
        with col_theme1:
            if st.button("üåô Escuro", use_container_width=True, key="dark_btn"):
                st.session_state.dark_mode = True
                st.rerun()
        
        with col_theme2:
            if st.button("‚òÄÔ∏è Claro", use_container_width=True, key="light_btn"):
                st.session_state.dark_mode = False
                st.rerun()
        
        # Indicador do tema atual
        tema_atual = "üåô Modo Escuro" if st.session_state.dark_mode else "‚òÄÔ∏è Modo Claro"
        st.info(f"Tema atual: {tema_atual}")
        
        st.markdown("---")
        
        st.markdown("### <i class='fas fa-info-circle icon-sidebar'></i>Informa√ß√µes das Fontes", unsafe_allow_html=True)
        
        # M√©tricas das fontes
        st.metric("üìä Total Documentos", total_todas_fontes)
        
        st.markdown("### <i class='fas fa-database icon-sidebar'></i>Fontes Dispon√≠veis:", unsafe_allow_html=True)
        fontes_info = {
            "Legisla√ß√£o Estadual TO": ("fas fa-landmark", "Leis ambientais do Tocantins"),
            "Power BI": ("fas fa-chart-line", "Dados de business intelligence"),
            "ABNT": ("fas fa-certificate", "Normas t√©cnicas brasileiras"),
            "COEMA": ("fas fa-leaf", "Conselho Estadual do Meio Ambiente"),
            "CONAMA": ("fas fa-flag-usa", "Conselho Nacional do Meio Ambiente"),
            "IBAMA": ("fas fa-shield-alt", "Instituto Brasileiro do Meio Ambiente"),
            "ICMBio": ("fas fa-tree", "Instituto Chico Mendes")
        }
        
        for fonte, (icone, desc) in fontes_info.items():
            st.markdown(f"<i class='{icone} icon-sidebar'></i>**{fonte}**: {desc}", unsafe_allow_html=True)
        
        st.markdown("### <i class='fas fa-lightbulb icon-sidebar'></i>Como usar:", unsafe_allow_html=True)
        st.markdown("""
        <i class='fas fa-map-marker-alt icon-sidebar'></i>1. **Selecione** o munic√≠pio do empreendimento<br>
        <i class='fas fa-industry icon-sidebar'></i>2. **Escolha** o grupo de atividade<br>
        <i class='fas fa-cog icon-sidebar'></i>3. **Configure** as esferas legais desejadas<br>
        <i class='fas fa-play icon-sidebar'></i>4. **Gere** a estrutura e depois o quadro-resumo<br>
        <i class='fas fa-download icon-sidebar'></i>5. **Baixe** o resultado nos formatos dispon√≠veis
        """, unsafe_allow_html=True)
        
        st.markdown("### <i class='fas fa-exclamation-triangle icon-sidebar'></i>Premissas obrigat√≥rias:", unsafe_allow_html=True)
        st.markdown("""
        <i class='fas fa-check-circle icon-sidebar'></i>**APENAS legisla√ß√µes VIGENTES** s√£o listadas<br>
        <i class='fas fa-file-alt icon-sidebar'></i>**T√≠tulos oficiais** completos e status de vig√™ncia<br>
        <i class='fas fa-ban icon-sidebar'></i>**Legisla√ß√µes revogadas/substitu√≠das** s√£o omitidas<br>
        <i class='fas fa-balance-scale icon-sidebar'></i>Organizado por **esfera legal** (Federal, Estadual, Municipal)
        """, unsafe_allow_html=True)
        
        st.markdown("### <i class='fas fa-target icon-sidebar'></i>Objetivo:", unsafe_allow_html=True)
        st.markdown("""
        **Quadro-resumo de legisla√ß√µes ambientais** aplic√°veis a empreendimentos no Tocantins, 
        organizadas por esfera legal e espec√≠ficas para o munic√≠pio e atividade selecionados.
        """, unsafe_allow_html=True)
        
        st.markdown("### <i class='fas fa-clipboard-list icon-sidebar'></i>Caracter√≠sticas do quadro:", unsafe_allow_html=True)
        st.markdown("""
        <i class='fas fa-leaf icon-sidebar'></i>Espec√≠fico para **legisla√ß√µes ambientais**<br>
        <i class='fas fa-map icon-sidebar'></i>Focado no **estado do Tocantins**<br>
        <i class='fas fa-bullseye icon-sidebar'></i>Adaptado para **munic√≠pio e atividade** selecionados<br>
        <i class='fas fa-clock icon-sidebar'></i>Dados atualizados e **status de vig√™ncia** verificado
        """, unsafe_allow_html=True)
    
    # √Årea principal
    col1, col2 = st.columns([2, 1])
    
    with col1:
        st.markdown("### <i class='fas fa-map-marker-alt icon'></i>Localiza√ß√£o e Atividade", unsafe_allow_html=True)
        
        col_input1, col_input2 = st.columns(2)
        
        # Lista de munic√≠pios do Tocantins
        municipios_tocantins = [
            "Palmas", "Aragua√≠na", "Gurupi", "Porto Nacional", "Para√≠so do Tocantins",
            "Colinas do Tocantins", "Guara√≠", "Tocantin√≥polis", "Formoso do Araguaia",
            "Dian√≥polis", "Miracema do Tocantins", "Taguatinga", "Augustin√≥polis",
            "Pedro Afonso", "Xambio√°", "Alvorada", "Arraias", "Araguatins",
            "Cristal√¢ndia", "Nova Olinda", "Anan√°s", "Outro munic√≠pio"
        ]
        
        # Op√ß√£o de modo de entrada
        modo_entrada = st.radio(
            "üéØ Modo de Entrada:",
            options=["Comando Detalhado", "Sele√ß√£o Manual"],
            help="Escolha como deseja fornecer as informa√ß√µes do empreendimento"
        )
        
        if modo_entrada == "Comando Detalhado":
            st.markdown("### üìù Descreva seu Projeto")
            st.success("üéØ **Modo Inteligente Ativado:** Descreva seu projeto em linguagem natural e a IA extrair√° automaticamente todas as informa√ß√µes necess√°rias!")
            
            # Exemplo expandido
            with st.expander("üìã Ver Exemplo de Comando", expanded=False):
                st.markdown("""
                **Exemplo de comando completo:**
                
                *"Estou fazendo um estudo ambiental para regularizar a atividade de agricultura do munic√≠pio de Anan√°s no Tocantins, elabore um quadro com a legisla√ß√£o ambiental federal, estadual e municipal relacionada ao tipo de empreendimento no contexto de um licenciamento ambiental"*
                
                **A IA identificar√° automaticamente:**
                - üìç **Munic√≠pio:** Anan√°s
                - üè≠ **Atividade:** Agricultura  
                - ‚öñÔ∏è **Esferas:** Federal, Estadual, Municipal
                - üìã **Contexto:** Licenciamento ambiental
                """)
            
            # Campo para comando em linguagem natural
            comando_usuario = st.text_area(
                "üí¨ Descreva seu projeto em linguagem natural:",
                placeholder='Exemplo: "Estou fazendo um estudo ambiental para regularizar a atividade de agricultura do munic√≠pio de Anan√°s no Tocantins, elabore um quadro com a legisla√ß√£o ambiental federal, estadual e municipal relacionada ao tipo de empreendimento no contexto de um licenciamento ambiental"',
                height=150,
                help="Descreva seu projeto, munic√≠pio, atividade e contexto em linguagem natural. Seja espec√≠fico sobre o tipo de empreendimento e o contexto (licenciamento, regulariza√ß√£o, etc.)"
            )
            
            # Extrair informa√ß√µes automaticamente se o comando foi fornecido
            municipio_extraido = ""
            atividade_extraida = ""
            
            if comando_usuario:
                # Extrair munic√≠pio
                for mun in municipios_tocantins:
                    if mun.lower() in comando_usuario.lower():
                        municipio_extraido = mun
                        break
                
                # Extrair atividade com mapeamento expandido
                atividades_map = {
                    # Agricultura
                    "agricultura": "Agricultura", "agr√≠cola": "Agricultura", "agropecu√°ria": "Agricultura",
                    "rural": "Agricultura", "plantio": "Agricultura", "cultivo": "Agricultura",
                    "irriga√ß√£o": "Agricultura", "lavoura": "Agricultura", "safra": "Agricultura",
                    "agroneg√≥cio": "Agricultura", "produtor rural": "Agricultura", "propriedade rural": "Agricultura",
                    
                    # Pecu√°ria
                    "pecu√°ria": "Pecu√°ria", "gado": "Pecu√°ria", "bovino": "Pecu√°ria", "su√≠no": "Pecu√°ria",
                    "av√≠cola": "Pecu√°ria", "frigor√≠fico": "Pecu√°ria", "abate": "Pecu√°ria", "rebanho": "Pecu√°ria",
                    "pastagem": "Pecu√°ria", "cria√ß√£o de animais": "Pecu√°ria", "aves": "Pecu√°ria",
                    
                    # Ind√∫stria
                    "ind√∫stria": "Ind√∫stria", "industrial": "Ind√∫stria", "f√°brica": "Ind√∫stria",
                    "manufatura": "Ind√∫stria", "produ√ß√£o industrial": "Ind√∫stria", "processamento": "Ind√∫stria",
                    "transforma√ß√£o": "Ind√∫stria", "beneficiamento": "Ind√∫stria",
                    
                    # Minera√ß√£o
                    "minera√ß√£o": "Minera√ß√£o", "min√©rio": "Minera√ß√£o", "extra√ß√£o": "Minera√ß√£o",
                    "lavra": "Minera√ß√£o", "garimpo": "Minera√ß√£o", "jazida": "Minera√ß√£o",
                    "explora√ß√£o mineral": "Minera√ß√£o", "extra√ß√£o mineral": "Minera√ß√£o",
                    
                    # Saneamento
                    "saneamento": "Saneamento", "√°gua": "Saneamento", "esgoto": "Saneamento",
                    "abastecimento": "Saneamento", "tratamento": "Saneamento", "res√≠duos s√≥lidos": "Saneamento",
                    "lixo": "Saneamento", "coleta": "Saneamento", "aterro sanit√°rio": "Saneamento",
                    "reciclagem": "Saneamento", "compostagem": "Saneamento",
                    
                    # Energia
                    "energia": "Energia", "el√©trica": "Energia", "solar": "Energia", "e√≥lica": "Energia",
                    "hidrel√©trica": "Energia", "usina": "Energia", "gera√ß√£o": "Energia",
                    "renov√°vel": "Energia", "fotovoltaica": "Energia", "biomassa": "Energia",
                    
                    # Lazer e Turismo
                    "turismo": "Lazer e Turismo", "hotel": "Lazer e Turismo", "pousada": "Lazer e Turismo",
                    "resort": "Lazer e Turismo", "ecoturismo": "Lazer e Turismo", "camping": "Lazer e Turismo",
                    "recrea√ß√£o": "Lazer e Turismo", "parque": "Lazer e Turismo",
                    
                    # Transporte
                    "transporte": "Transporte", "rodovia": "Transporte", "estrada": "Transporte",
                    "ferrovia": "Transporte", "aeroporto": "Transporte", "porto": "Transporte",
                    "log√≠stica": "Transporte", "terminal": "Transporte",
                    
                    # Constru√ß√£o Civil
                    "constru√ß√£o": "Constru√ß√£o Civil", "edifica√ß√£o": "Constru√ß√£o Civil", "obra": "Constru√ß√£o Civil",
                    "loteamento": "Constru√ß√£o Civil", "condom√≠nio": "Constru√ß√£o Civil", "urbaniza√ß√£o": "Constru√ß√£o Civil",
                    "infraestrutura": "Constru√ß√£o Civil", "pavimenta√ß√£o": "Constru√ß√£o Civil",
                    
                    # Servi√ßos
                    "servi√ßos": "Servi√ßos", "consultoria": "Servi√ßos", "escrit√≥rio": "Servi√ßos",
                    "presta√ß√£o de servi√ßos": "Servi√ßos", "terceiriza√ß√£o": "Servi√ßos",
                    
                    # Com√©rcio
                    "com√©rcio": "Com√©rcio", "loja": "Com√©rcio", "mercado": "Com√©rcio",
                    "shopping": "Com√©rcio", "varejo": "Com√©rcio", "atacado": "Com√©rcio",
                    "comercializa√ß√£o": "Com√©rcio", "venda": "Com√©rcio"
                }
                
                # Buscar a atividade mais espec√≠fica (palavras compostas primeiro)
                atividades_encontradas = []
                for palavra, atividade in atividades_map.items():
                    if palavra in comando_usuario.lower():
                        atividades_encontradas.append((len(palavra), atividade))
                
                # Priorizar palavras mais longas (mais espec√≠ficas)
                if atividades_encontradas:
                    atividades_encontradas.sort(reverse=True)  # Ordenar por tamanho decrescente
                    atividade_extraida = atividades_encontradas[0][1]
            
            # Mostrar informa√ß√µes extra√≠das
            if comando_usuario:
                col_info1, col_info2 = st.columns(2)
                with col_info1:
                    if municipio_extraido:
                        st.success(f"üèôÔ∏è **Munic√≠pio identificado:** {municipio_extraido}")
                    else:
                        st.warning("üèôÔ∏è **Munic√≠pio:** N√£o identificado automaticamente")
                        
                with col_info2:
                    if atividade_extraida:
                        # Encontrar a palavra-chave que foi identificada
                        palavra_encontrada = ""
                        for palavra, atividade in atividades_map.items():
                            if atividade == atividade_extraida and palavra in comando_usuario.lower():
                                if len(palavra) > len(palavra_encontrada):  # Pegar a mais espec√≠fica
                                    palavra_encontrada = palavra
                        
                        st.success(f"üè≠ **Atividade identificada:** {atividade_extraida}")
                        if palavra_encontrada:
                            st.caption(f"üîç Palavra-chave detectada: '{palavra_encontrada}'")
                    else:
                        st.warning("üè≠ **Atividade:** N√£o identificada automaticamente")
                        
                        # Mostrar sugest√µes de palavras-chave por categoria
                        with st.expander("üí° Ver palavras-chave sugeridas por atividade", expanded=False):
                            st.markdown("""
                            **üåæ Agricultura:** agricultura, agr√≠cola, rural, plantio, cultivo, irriga√ß√£o, lavoura, agroneg√≥cio
                            
                            **üêÑ Pecu√°ria:** pecu√°ria, gado, bovino, su√≠no, av√≠cola, frigor√≠fico, pastagem, cria√ß√£o de animais
                            
                            **üè≠ Ind√∫stria:** ind√∫stria, industrial, f√°brica, manufatura, processamento, beneficiamento
                            
                            **‚õèÔ∏è Minera√ß√£o:** minera√ß√£o, lavra, garimpo, extra√ß√£o mineral, explora√ß√£o mineral
                            
                            **üíß Saneamento:** saneamento, √°gua, esgoto, res√≠duos s√≥lidos, aterro sanit√°rio, reciclagem
                            
                            **‚ö° Energia:** energia, solar, e√≥lica, hidrel√©trica, usina, gera√ß√£o, renov√°vel
                            
                            **üè® Turismo:** turismo, hotel, pousada, ecoturismo, recrea√ß√£o
                            
                            **üöõ Transporte:** transporte, rodovia, ferrovia, aeroporto, log√≠stica
                            
                            **üèóÔ∏è Constru√ß√£o:** constru√ß√£o, obra, loteamento, urbaniza√ß√£o, infraestrutura
                            """)
                            st.info("üí° **Dica:** Inclua uma dessas palavras na sua descri√ß√£o para identifica√ß√£o autom√°tica!")
            
            # Usar valores extra√≠dos ou permitir corre√ß√£o manual
            with col_input1:
                municipio = st.selectbox(
                    "üèõÔ∏è Confirme o Munic√≠pio:",
                    municipios_tocantins,
                    index=municipios_tocantins.index(municipio_extraido) if municipio_extraido in municipios_tocantins else 0,
                    help="Confirme ou corrija o munic√≠pio identificado"
                )
            
            with col_input2:
                atividades = [
                    "Agricultura", "Pecu√°ria", "Ind√∫stria", "Minera√ß√£o", 
                    "Saneamento", "Lazer e Turismo", "Energia", "Transporte",
                    "Constru√ß√£o Civil", "Servi√ßos", "Com√©rcio", "Outros"
                ]
                grupo_atividade = st.selectbox(
                    "üè≠ Confirme a Atividade:",
                    atividades,
                    index=atividades.index(atividade_extraida) if atividade_extraida in atividades else 0,
                    help="Confirme ou corrija a atividade identificada"
                )
            
            # Usar o comando como descri√ß√£o adicional
            descricao = comando_usuario
            
        else:
            # Modo de sele√ß√£o manual (interface original)
            with col_input1:
                municipio = st.selectbox(
                    "üèõÔ∏è Munic√≠pio do Tocantins",
                    municipios_tocantins,
                    index=0,
                    help="Selecione o munic√≠pio onde ser√° desenvolvido o empreendimento"
                )
            
            with col_input2:
                grupo_atividade = st.selectbox(
                    "üè≠ Grupo de Atividade",
                    [
                        "Agricultura", "Pecu√°ria", "Ind√∫stria", "Minera√ß√£o", 
                        "Saneamento", "Lazer e Turismo", "Energia", "Transporte",
                        "Constru√ß√£o Civil", "Servi√ßos", "Com√©rcio", "Outros"
                    ],
                    index=0,
                    help="Selecione o tipo de atividade do empreendimento"
                )
            
            st.markdown("### <i class='fas fa-edit icon'></i>Descri√ß√£o Adicional (Opcional)", unsafe_allow_html=True)
            
            descricao = st.text_area(
                "Informa√ß√µes espec√≠ficas sobre o empreendimento (opcional)",
                placeholder="Ex: Frigor√≠fico de grande porte, Usina hidrel√©trica, Loteamento residencial...",
                height=80,
                help="Informa√ß√µes adicionais que podem ajudar na sele√ß√£o de legisla√ß√µes mais espec√≠ficas"
            )
        
        col_btn1, col_btn2 = st.columns(2)
        
        with col_btn1:
            st.markdown("""
            <style>
            .stButton > button:first-child {
                background: linear-gradient(135deg, #2c5aa0 0%, #1f4e79 100%);
                color: white;
                border: none;
                border-radius: 8px;
                padding: 0.5rem 1rem;
                font-weight: 500;
                transition: all 0.3s ease;
            }
            .stButton > button:first-child:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(44, 90, 160, 0.3);
            }
            </style>
            """, unsafe_allow_html=True)
            btn_estrutura = st.button("üìã Gerar Estrutura", use_container_width=True)
        
        with col_btn2:
            btn_quadro = st.button("‚öñÔ∏è Gerar Quadro-Resumo", use_container_width=True)
    
    with col2:
        st.markdown("### <i class='fas fa-cog icon'></i>Configura√ß√µes", unsafe_allow_html=True)
        
        incluir_esferas = st.multiselect(
            "‚öñÔ∏è Esferas Legais",
            ["Federal", "Estadual", "Municipal"],
            default=["Federal", "Estadual", "Municipal"]
        )

        # Op√ß√£o h√≠brida: Slider + Input
        # Inicializar valor no session_state se n√£o existir
        if 'limite_documentos' not in st.session_state:
            st.session_state.limite_documentos = 10

        # Op√ß√£o h√≠brida: Slider + Input com sincroniza√ß√£o bidirecional
        col1, col2 = st.columns([3, 1])
        with col1:
            st.slider(
                "üìä M√°ximo de legisla√ß√µes por esfera", 
                5, 1000, 
                value=st.session_state.limite_documentos,
                key="slider_limite"
            )
        with col2:
            st.number_input(
                "Valor exato", 
                value=st.session_state.limite_documentos,
                min_value=5, 
                max_value=1000,
                step=1,
                help="Digite o valor exato ou use o slider",
                key="input_limite"
            )

        # Sincroniza√ß√£o: atualiza session_state com o √∫ltimo valor alterado
        if st.session_state.slider_limite != st.session_state.limite_documentos:
            st.session_state.limite_documentos = st.session_state.slider_limite
        elif st.session_state.input_limite != st.session_state.limite_documentos:
            st.session_state.limite_documentos = st.session_state.input_limite

        limite_documentos = st.session_state.limite_documentos
        st.caption("üí° Dica: Use valores altos (ex: 1000) para buscar todas as leis dispon√≠veis")
        st.info(f"üèõÔ∏è Base: {total_leis_estaduais} leis estaduais, {total_leis_federais} federais, {total_leis_municipais} municipais dispon√≠veis")
        
        formato_download = st.selectbox(
            "Formato para download",
            ["Excel", "CSV"],
            index=0
        )
    
    # Processamento
    if btn_estrutura or btn_quadro:
        # Valida√ß√£o b√°sica
        if not municipio or not grupo_atividade:
            st.error("‚ùå Por favor, selecione o munic√≠pio e grupo de atividade!")
            return
        
        if btn_estrutura:
            with st.spinner("üîÑ Gerando estrutura usando IA direcionada..."):
                try:
                    # Gerar estrutura inteligente com IA
                    estrutura = {
                        "municipio": municipio,
                        "atividade": grupo_atividade,
                        "esferas": incluir_esferas,
                        "metodo": "IA Direcionada",
                        "colunas": ["Esfera", "T√≠tulo da Legisla√ß√£o", "Vig√™ncia", "Descri√ß√£o Resumida", "Aplicabilidade"]
                    }
                    
                    st.session_state.estrutura_atual = estrutura
                    st.success("‚úÖ Estrutura gerada com sucesso usando IA direcionada!")
                    
                    # Exibir estrutura
                    st.subheader("üìã Estrutura do Quadro-Resumo")
                    st.json(estrutura)
                        
                except Exception as e:
                    st.error(f"‚ùå Erro ao gerar estrutura: {str(e)}")
        
        elif btn_quadro:
            # VALIDA√á√ÉO DA DESCRI√á√ÉO ANTES DO PROCESSAMENTO
            if not validar_entrada_usuario(descricao):
                st.error("‚ùå Descri√ß√£o inv√°lida ou irrelevante para a Legisla√ß√£o Ambiental. Digite novamente!")
                st.info("üîç **Exemplo v√°lido:** 'Estudo ambiental para regularizar atividade de agricultura'")
                return
            
            with st.spinner("üîÑ Gerando quadro-resumo usando dados reais do Pinecone..."):
                try:
                    # Gerar quadro-resumo usando dados reais do Pinecone
                    estrutura = st.session_state.ia_tabela_service._estrutura_quadro_padrao(municipio, grupo_atividade)
                    df_resultado = st.session_state.ia_tabela_service.popular_quadro_resumo(
                        estrutura=estrutura,
                        municipio=municipio,
                        grupo_atividade=grupo_atividade,
                        esferas=incluir_esferas,
                        limite_por_esfera=limite_documentos
                    )
                    
                    if df_resultado is not None and not df_resultado.empty:
                        st.session_state.df_resultado = df_resultado
                        st.success("‚úÖ Quadro-resumo gerado com sucesso usando dados reais do Pinecone!")
                        
                        # Exibir t√≠tulo da tabela
                        st.subheader(f"üìä Quadro-Resumo de Legisla√ß√µes Ambientais - {municipio}")
                        st.caption(f"**Atividade:** {grupo_atividade} | **M√©todo:** Dados Reais Pinecone | **Total:** {len(df_resultado)} legisla√ß√µes")
                        
                        # Exibir tabela
                        st.dataframe(
                            df_resultado,
                            use_container_width=True,
                            hide_index=True,
                            column_config={
                                "esfera": st.column_config.TextColumn("üèõÔ∏è Esfera", width="small"),
                                "titulo_legislacao": st.column_config.TextColumn("üìú T√≠tulo da Legisla√ß√£o", width="large"),
                                "vigencia": st.column_config.TextColumn("‚úÖ Vig√™ncia", width="small"),
                                "descricao_resumida": st.column_config.TextColumn("üìù Descri√ß√£o Resumida", width="large"),
                                "aplicabilidade": st.column_config.TextColumn("üéØ Aplicabilidade", width="large"),
                                "fonte_dados": st.column_config.TextColumn("üìä Fonte dos Dados", width="medium")
                            }
                        )
                    else:
                        st.warning(f"‚ö†Ô∏è Nenhuma legisla√ß√£o encontrada para '{grupo_atividade}' nos dados reais do Pinecone")
                        st.info("üí° N√£o foram encontradas legisla√ß√µes relevantes para esta atividade espec√≠fica nos dados indexados")
                        
                except Exception as e:
                    st.error(f"‚ùå Erro ao gerar quadro-resumo: {str(e)}")
        
        # Mostrar downloads se houver resultado
        if 'df_resultado' in st.session_state and not st.session_state.df_resultado.empty:
            df_resultado = st.session_state.df_resultado
                
            # Preparar dados para download
            from io import BytesIO
            excel_buffer = BytesIO()
            df_resultado.to_excel(excel_buffer, index=False)
            excel_buffer.seek(0)
            
            # Bot√µes de download
            st.markdown("### <i class='fas fa-download icon'></i>Downloads", unsafe_allow_html=True)
            col_dl1, col_dl2 = st.columns(2)
            
            with col_dl1:
                st.download_button(
                    "üìä Baixar Excel",
                    data=excel_buffer.getvalue(),
                    file_name=f"quadro_resumo_{municipio}_{grupo_atividade}.xlsx",
                    mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    use_container_width=True
                )
            
            with col_dl2:
                st.download_button(
                    "üìÑ Baixar CSV",
                    data=df_resultado.to_csv(index=False),
                    file_name=f"quadro_resumo_{municipio}_{grupo_atividade}.csv",
                    mime="text/csv",
                    use_container_width=True
                )
            
            # Estat√≠sticas da tabela
            st.markdown("### <i class='fas fa-chart-bar icon'></i>Estat√≠sticas do Quadro-Resumo", unsafe_allow_html=True)
            col_stat1, col_stat2, col_stat3 = st.columns(3)
            
            with col_stat1:
                st.metric("üìä Total de Legisla√ß√µes", len(df_resultado))
            
            with col_stat2:
                esferas_unicas = df_resultado['esfera'].nunique() if 'esfera' in df_resultado.columns else 0
                st.metric("üèõÔ∏è Esferas Representadas", esferas_unicas)
            
            with col_stat3:
                st.metric("üìã Total de Colunas", len(df_resultado.columns))

# Rodap√©
st.markdown("---")
st.markdown("**<i class='fas fa-database icon'></i>Dados Reais Pinecone** - Legisla√ß√µes reais indexadas e verificadas", unsafe_allow_html=True)
st.markdown("<i class='fas fa-shield-alt icon'></i>**Vantagem:** 100% dados reais, sem informa√ß√µes fict√≠cias!", unsafe_allow_html=True)

if __name__ == "__main__":
    main()